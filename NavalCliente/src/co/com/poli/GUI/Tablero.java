/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package co.com.poli.GUI;

import java.awt.Button;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author omesa
 */
public class Tablero extends javax.swing.JFrame {
    private static int numBotones = 5;
    private static int tamBarco = 4;
    private ArrayList<Boton> matrizBotones;
    private Boton[][] matrizBotopesFC;
    private ArrayList<JButton> barco;
    /**
     * Creates new form Tablero
     */
    public Tablero() {
        initComponents();       
        matrizBotones = new ArrayList<>();
        matrizBotopesFC = new Boton[numBotones + 1][numBotones + 1];
        barco = new ArrayList<>();
        llenarMatrizBotones();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        button1 = new java.awt.Button();
        button2 = new java.awt.Button();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(255, 3, 0));
        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel1.setText("Batalla Naval");

        jLabel2.setText("Tablero enemigo");

        button1.setLabel("button1");

        button2.setLabel("button2");

        jPanel2.setLayout(new java.awt.GridLayout(1, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(316, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(219, 219, 219))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tablero().setVisible(true);
            }
        });
    }

    public void llenarMatrizBotones() {
        jPanel2.setLayout(new GridLayout(numBotones, numBotones));
        
        for (int i = 1; i <= numBotones; i++) {
            for (int j = 1; j <= numBotones; j++) {
                final JButton boton = new JButton("b" + i +","+j);
                boton.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        int minimum = 1, maximum = 4;
                        int columna = (matrizBotones.get(Integer.parseInt(boton.getName())).getColumna());
                        int fila = (matrizBotones.get(Integer.parseInt(boton.getName())).getFila());
                        boolean sw = true,s1 = true,s3 = true,s2 = true,s4 = true;
                        int control = 0;
                        while (sw) {
                            int op = minimum + (int)(Math.random()*maximum); 
                            switch(op){
                                case 1:
                                    if(fila - tamBarco >= 0){
                                        sw = false;
                                        pintarBarco1(fila,columna);
                                    }else{
                                        s1 = false;
                                    }
                                    break;
                                case 2:
                                    if((numBotones - columna + 1) >= tamBarco){
                                        sw = false;
                                        pintarBarco2(fila,columna);
                                    }else{
                                        s2 = false;
                                    }
                                    break;
                                case 3:
                                    if((numBotones - fila + 1) >= tamBarco ){
                                        sw = false;
                                        pintarBarco3(fila, columna);
                                    }else{
                                        s3 = false;
                                    }
                                    break;
                                case 4:
                                    if(columna - tamBarco >= 0){
                                        sw = false;
                                        pintarBarco4(fila, columna);
                                    }else{
                                        s4 = false;
                                    }
                                    break;
                            }
                            if(!s1 && !s2 && !s3 && !s4){
                                JOptionPane.showMessageDialog(rootPane, "Debe seleccionar un punto diferente en la mtriz","Error",JOptionPane.ERROR_MESSAGE);
                                break;
                            }
                        }                                                            
                    }
                });
                Boton btnP = new Boton(boton, i, j);
                matrizBotones.add(btnP);
                matrizBotopesFC[i][j] = btnP;
                boton.setName(String.valueOf(matrizBotones.size()-1));
                jPanel2.add(boton);
            }            
        }
    }
    
    public void pintarBarco1(int fila, int columna){
        int cont = 0;
        for (int i = fila; cont < tamBarco; i--) {
            matrizBotopesFC[i][columna].getBtn().setBackground(Color.BLUE);
            barco.add(matrizBotopesFC[i][columna].getBtn());
            cont++;
        }
    }
    public void pintarBarco2(int fila, int columna){
        int cont = 0;
        for (int j = columna; cont < tamBarco; j++) {
            matrizBotopesFC[fila][j].getBtn().setBackground(Color.BLUE);
            barco.add(matrizBotopesFC[fila][j].getBtn());
            cont++;
        }
    }
    public void pintarBarco3(int fila, int columna){
        int cont = 0;
        for (int i = fila; cont < tamBarco; i++) {
            matrizBotopesFC[i][columna].getBtn().setBackground(Color.BLUE);
            barco.add(matrizBotopesFC[i][columna].getBtn());
            cont++;
        }
    }
    public void pintarBarco4(int fila, int columna){
        int cont = 0;
        for (int j = columna; cont < tamBarco; j--) {
            matrizBotopesFC[fila][j].getBtn().setBackground(Color.BLUE);
            barco.add(matrizBotopesFC[fila][j].getBtn());
            cont++;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button button1;
    private java.awt.Button button2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}

class Boton{
    private JButton btn;
    private int fila;
    private int columna;

    public Boton() {
    }

    public Boton(JButton btn, int fila, int columna) {
        this.btn = btn;
        this.fila = fila;
        this.columna = columna;
    }

    public JButton getBtn() {
        return btn;
    }

    public void setBtn(JButton btn) {
        this.btn = btn;
    }

    public int getFila() {
        return fila;
    }

    public void setFila(int fila) {
        this.fila = fila;
    }

    public int getColumna() {
        return columna;
    }

    public void setColumna(int columna) {
        this.columna = columna;
    }
    
    
}
